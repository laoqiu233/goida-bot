# GPU is not available in Docker on macos
# You should start Ollama seperately on host machine

services:
  pgpt:
    build:
      context: ./
      dockerfile: ./pgpt/Dockerfile
    ports:
      - 8001:8001
    expose:
      - 8001
    volumes:
     - ./pgpt/settings-docker.yaml:/home/worker/app/settings-docker.yaml
    environment:
      PORT: 8001
      PGPT_PROFILES: docker
      PGPT_MODE: ollama
      PGPT_EMBED_MODE: ollama
      PGPT_OLLAMA_API_BASE: http://goida-bot-ollama-1:11434
      PGPT_OLLAMA_EMBEDDING_API_BASE: http://goida-bot-ollama-1:11434
      PGPT_OLLAMA_LLM_MODEL: my-model
      PGPT_OLLAMA_EMBEDDING_MODEL: my-embed
      PGPT_EMBED_DIM: 1024
      POSTGRES_PASSWORD: goida
    restart: always
    depends_on:
      ollama:
        condition: service_healthy
      postgres:
        condition: service_started
  ollama:
    image: traefik:v2.10
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -q --spider http://ollama:11434 || exit 1"]
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 5s
    ports:
      - "8080:8080"
    expose:
      - 11434
    command:
      - "--providers.file.filename=/etc/router.yml"
      - "--log.level=ERROR"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:11434"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.docker/router.yml:/etc/router.yml:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_PASSWORD=goida
    volumes:
      - postgres:/var/lib/postgresql/data
  migrate:
    build:
      dockerfile: docker/migrate.Dockerfile
      context: .
    depends_on:
      - postgres
  fetcher:
    build:
      dockerfile: docker/fetcher.Dockerfile
      context: .
    volumes:
      - ./content:/app/content
    env_file:
      - .env
      - .env.secrets
    depends_on:
      - migrate
    restart: always
  indexer:
    build:
      dockerfile: docker/indexer.Dockerfile
      context: .
    volumes:
      - ./content:/app/content
    env_file:
      - .env
      - .env.secrets
    restart: always
    depends_on:
      - migrate
volumes:
  postgres: